#!/bin/bash

# üîß PLOMBIER UPDATE: Configure Ava as Monsieur Cohen's secretary

echo "üîß PLOMBIER SETUP - Configuring Ava as plumber secretary"
echo ""
echo "Ava will now be the perfect secretary for a plumber!"
echo ""

# Get backend URL
BACKEND_URL="http://localhost:8000"

# Test if backend is running
if ! curl -s "$BACKEND_URL/api/v1/studio/config" > /dev/null 2>&1; then
    echo "‚ùå Backend not running on port 8000"
    echo "   Start it with: cd api && python3.11 -m uvicorn main:app --reload --port 8000"
    exit 1
fi

# Sync config with plumber persona
echo "üì° Syncing assistant with plumber secretary persona..."
RESPONSE=$(curl -s -X POST "$BACKEND_URL/api/v1/studio/sync-vapi" \
    -H "Content-Type: application/json")

# Check response
if echo "$RESPONSE" | grep -q "assistantId"; then
    ASSISTANT_ID=$(echo "$RESPONSE" | grep -o '"assistantId":"[^"]*"' | cut -d'"' -f4)
    ACTION=$(echo "$RESPONSE" | grep -o '"action":"[^"]*"' | cut -d'"' -f4)
    
    echo ""
    echo "‚úÖ SUCCESS!"
    echo "   Action: $ACTION"
    echo "   Assistant ID: $ASSISTANT_ID"
    echo ""
    echo "üîß AVA Configuration:"
    echo "   Role: Secr√©taire de Monsieur Cohen (Plombier)"
    echo "   First Message: 'Bonjour, ici Ava, la secr√©taire de Monsieur Cohen, plombier...'"
    echo ""
    echo "üìã Services propos√©s:"
    echo "   ‚Ä¢ Fuites d'eau"
    echo "   ‚Ä¢ R√©paration robinets/WC"
    echo "   ‚Ä¢ Installation sanitaire"
    echo "   ‚Ä¢ Chauffe-eau"
    echo "   ‚Ä¢ D√©pannage urgence 24/7"
    echo ""
    echo "üé§ Voice: Azure Denise (ultra naturelle)"
    echo "üéß Transcriber: Deepgram Nova-2 (fran√ßais)"
    echo "ü§ñ AI: GPT-4o (meilleur pour fran√ßais)"
    echo ""
    echo "üéØ AVA est maintenant la secr√©taire PARFAITE de plombier!"
else
    echo ""
    echo "‚ùå FAILED"
    echo "Response: $RESPONSE"
    exit 1
fi
